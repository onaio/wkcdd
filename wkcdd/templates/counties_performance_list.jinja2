{% extends 'base.jinja2' %}
{% from 'macros/value_or_default.jinja2' import value_or_default %}
{% from 'macros/add_indicator_links.jinja2' import add_indicator_links %}
{% from 'macros/generate_performance_indicator_table.jinja2' import generate_performance_indicator_table %}
{% from 'macros/generate_filter_criteria_dropdowns.jinja2' import  generate_filter_criteria_dropdowns %}
{% from 'macros/generate_map_chart.jinja2' import  generate_map_chart %}
{% from 'macros/generate_project_type_dropdown.jinja2' import  generate_project_type_dropdown %}
{% block title %} {{ title }}{% endblock %}
{% block page_title %}
  <h3 class="page-title">
      {{ self.title() }}
    <small></small>
  </h3>
{% endblock %}
{% block filters %}
     {{ generate_filter_criteria_dropdowns(filter_criteria, search_criteria['location_map']) }}
{% endblock %}
{% block breadcrumbs %}
  <li>
      <a href="{{ request.route_url('counties', traverse=()) }}">{% trans %}County Indicators{% endtrans %}</a>
      <i class="icon-angle-right"></i>
  </li>
  <li>
    {{ self.title() }}
  </li>
{% endblock %}
{% block indicators %}
  {{ add_indicator_links(request, 'counties', None, 'performance') }}
{% endblock %}
{% block content %}
<!--MAP-->
{{ generate_map_chart(request, sector_indicator_mapping[selected_project_types[0][0]]) }}
<!--END MAP-->

<!--PROJECT TYPE DROP DOWN-->
{% if selected_project_types | length > 1 %}
    {% set selected_name = 'All Sectors' %}
{% else %}
    {% set selected_name = selected_project_types[0][2] %}
{% endif %}
{{ generate_project_type_dropdown(request, selected_name, 'counties', '', project_types)}}

<!--PERFORMANCE INDICATOR TABLES-->
{% for sector, report, label in selected_project_types %}
    <div class="row">
        <div class="col-md-12">
            <!-- BEGIN SAMPLE TABLE PORTLET-->
            <div class="portlet">
                <div class="portlet-title">
                    <div class="caption">
                    <i class="icon-tasks"></i>
                    {{ gettext(label) }}
                    {% trans %}Projects{% endtrans %}
                    </div>
                </div>
                {{ generate_performance_indicator_table(request, 'counties',
                counties,
                sector_aggregated_indicators[sector], sector_indicator_mapping[sector]) }}
            </div>
            <!-- END SAMPLE TABLE PORTLET-->
        </div>

{% endfor %}
<!--PERFORMANCE INDICATOR TABLES END-->
{% endblock content %}
{% block page_scripts %}
    <script src="{{ request.static_url('wkcdd:static/scripts/custom.js') }}"></script>
    <script src="{{ request.static_url('wkcdd:static/scripts/map.js') }}"></script>
{% endblock %}
{% block jquery_ready %}
  {{ super() }}
  //map = Custom.display_constituency_map();
  location_json_data = {{ filter_criteria["location_json_data"]|safe() }};
  LocationSelect.data_map = location_json_data;
  {% for sector, report, label  in selected_project_types %}
    //2Custom.process_raw_points({{ project_type_geopoints[sector]|safe() }}, map);
  {% endfor %}

  // if we're viewing a single sector, get its indicator data
  {% if selected_project_types|length == 1 %}
    {% set sector, report, label = selected_project_types[0]  %}
    {% set aggregated_indicators = sector_aggregated_indicators[sector] %}
    var data = {
    {% for location in counties -%}
      {% set indicator_summaries = aggregated_indicators['aggregated_performance_indicators'][location.id]['summary'] %}
      '{{ location.pretty }}': {
        {% for mapping in sector_indicator_mapping[sector] -%}
          {% set target, actual, percentage = mapping['group'] -%}
          '{{ percentage }}': {
            label: '{{ mapping.title }}',
            value: {% if indicator_summaries[percentage] is defined %}'{{ indicator_summaries[percentage]|format_percent(request) }}'{% else %}null{% endif %}
          },
        {% endfor %}
      },
    {% endfor %}
    };
    Map.setData(data);
    // load json layer
    $.ajax("{{ request.static_url('wkcdd:static/geodata/wkcdd-counties.geojson') }}", {
      dataType: 'json'
    }).done(function(data, status){
      Map.setGeoJSON(data);
    });
  {% endif %}
{% endblock %}