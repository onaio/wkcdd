"""Initial database schema with project json data

Revision ID: 495e5d2a3c9a
Revises: None
Create Date: 2014-05-19 17:34:38.816163

"""

# revision identifiers, used by Alembic.
revision = '495e5d2a3c9a'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects.postgresql import ENUM


def upgrade():
    # commands auto generated by Alembic - please adjust! ###
    op.create_table('reports',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('project_code', sa.String(), nullable=False),
                    sa.Column('submission_time',
                              sa.DateTime(timezone=True), nullable=False),
                    sa.Column('month', sa.Integer(), nullable=False),
                    sa.Column('quarter', sa.String(), nullable=False),
                    sa.Column('period', sa.String(), nullable=False),
                    sa.Column('report_data', postgresql.JSON(),
                              nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_reports_project_code'),
                    'reports', ['project_code'], unique=False)
    op.create_table('locations',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.Text(), nullable=False),
                    sa.Column('parent_id', sa.Integer(), nullable=True),
                    sa.Column('location_type',
                              sa.Enum('county',
                                      'sub_county',
                                      'constituency',
                                      'community',
                                      name='LOCATION_TYPES'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['parent_id'], ['locations.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('project_type',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('form_types',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('projects',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('code', sa.String(), nullable=False),
                    sa.Column('name', sa.Text(), nullable=False),
                    sa.Column('community_id', sa.Integer(), nullable=False),
                    sa.Column('project_type_id', sa.Integer(), nullable=False),
                    sa.Column('sector', sa.String(), nullable=False),
                    sa.Column('geolocation', sa.Text(), nullable=True),
                    sa.Column('project_data', postgresql.JSON(),
                              nullable=False),
                    sa.ForeignKeyConstraint(
                        ['community_id'], ['locations.id'], ),
                    sa.ForeignKeyConstraint(
                        ['project_type_id'], ['project_type.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_projects_code'),
                    'projects', ['code'], unique=False)
    op.create_table('forms',
                    sa.Column('form_id', sa.String(), nullable=False),
                    sa.Column('form_name', sa.String(), nullable=False),
                    sa.Column('project_type_id', sa.Integer(), nullable=False),
                    sa.Column('form_type_id', sa.Integer(), nullable=False),
                    sa.Column('form_data', postgresql.JSON(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['form_type_id'], ['form_types.id'], ),
                    sa.ForeignKeyConstraint(
                        ['project_type_id'], ['project_type.id'], ),
                    sa.PrimaryKeyConstraint('form_id')
                    )
    # end Alembic commands ###


def downgrade():
    # commands auto generated by Alembic - please adjust! ###
    op.drop_table('forms')
    op.drop_index(op.f('ix_projects_code'), table_name='projects')
    op.drop_table('projects')
    op.drop_table('form_types')
    op.drop_table('project_type')
    op.drop_table('locations')
    op.drop_index(op.f('ix_reports_project_code'), table_name='reports')
    op.drop_table('reports')
    ENUM(name="LOCATION_TYPES").drop(op.get_bind(), checkfirst=False)
    # end Alembic commands ###
